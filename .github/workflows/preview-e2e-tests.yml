# File: .github/workflows/preview-e2e-tests.yml
name: Preview E2E Tests

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  repository_dispatch:
    types: [vercel.deployment.success]

jobs:
  playwright-tests:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: üß™ playwright-tests
    runs-on:
      - self-hosted
      - Linux
      - ARM64

    timeout-minutes: 35
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]

    env:
      NODE_ENV: test
      BASE_URL: ${{ github.event.client_payload.url }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}

    steps:
      - name: üöÄ Report in_progress status
        uses: ./.github/actions/report-status
        with:
          check_name: playwright-tests (${{ matrix.project }})
          status: in_progress
          title: üöß E2E Tests In Progress (${{ matrix.project }})
          summary: Comprehensive end-to-end tests running on preview deployment...
          sha: ${{ github.event.client_payload.git.sha }}

      - name: üß™ Log GitHub context
        run: echo '${{ toJson(github) }}'

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.git.sha }}
          fetch-depth: 0

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: ‚è≥ Wait for preview deployment
        uses: ./.github/actions/wait-for-deployment
        with:
          url: ${{ github.event.client_payload.url }}
          timeout_seconds: 90
          check_interval: 10
          max_attempts: 5
          initial_wait: 30

      - name: üß™ Run E2E tests
        id: e2e_tests
        run: npx playwright test --project=${{ matrix.project }} --reporter=list,html
        env:
          CI: true

      - name: üîç Run accessibility tests
        id: accessibility_tests
        run: npx playwright test --grep "@accessibility" --project=${{ matrix.project }}
        continue-on-error: true
        env:
          CI: true

      - name: ‚ö° Run performance tests
        id: performance_tests
        run: npx playwright test --grep "@performance" --project=${{ matrix.project }}
        continue-on-error: true
        env:
          CI: true

      - name: üìù Generate test summary
        if: always()
        run: |
          echo "## E2E Test Summary: ${{ matrix.project }}" >> $GITHUB_STEP_SUMMARY
          echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ steps.e2e_tests.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Accessibility | ${{ steps.accessibility_tests.outcome == 'success' && '‚úÖ Passed' || steps.accessibility_tests.outcome == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ö†Ô∏è Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ steps.performance_tests.outcome == 'success' && '‚úÖ Passed' || steps.performance_tests.outcome == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ö†Ô∏è Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Project**: ${{ matrix.project }}" >> $GITHUB_STEP_SUMMARY
          echo "**Preview URL**: ${{ github.event.client_payload.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY

      - name: üì§ Upload test artifacts
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: 'playwright-results-${{ matrix.project }}'
          path: test-results/
          retention-days: 7

      - name: üì§ Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'playwright-html-report-${{ matrix.project }}'
          path: playwright-report
          retention-days: 7

      # Unified status reporting for all outcomes
      - name: ‚úÖ Report success
        if: always() && success()
        uses: ./.github/actions/report-status
        with:
          check_name: playwright-tests (${{ matrix.project }})
          status: completed
          conclusion: success
          title: ‚úÖ E2E Tests Passed (${{ matrix.project }})
          summary: All end-to-end tests passed successfully on the preview deployment. Ready for production!
          sha: ${{ github.event.client_payload.git.sha }}

      - name: ‚ùå Report failure
        if: always() && failure()
        uses: ./.github/actions/report-status
        with:
          check_name: playwright-tests (${{ matrix.project }})
          status: completed
          conclusion: failure
          sha: ${{ github.event.client_payload.git.sha }}

      - name: ‚ö†Ô∏è Report cancelled
        if: always() && cancelled()
        uses: ./.github/actions/report-status
        with:
          check_name: playwright-tests (${{ matrix.project }})
          status: completed
          conclusion: cancelled
          sha: ${{ github.event.client_payload.git.sha }}
