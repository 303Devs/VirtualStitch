name: CI

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  repository_dispatch:
    types: [vercel.deployment.success]

env:
  NODE_ENV: test
  BASE_URL: ${{ github.event.client_payload.url }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

jobs:
  ci-checks:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: ✅ ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 10

    steps:
      - name: 🧪 Log GitHub context
        run: echo '${{ toJson(github) }}'

      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.git.sha }}

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: 🚀 Report ci-checks in_progress to GitHub App
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: in_progress
          name: ✅ ci-checks
          title: '🚧 CI In Progress'
          summary: 'Running linting, type checks, Jest tests, and build verification...'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔎 Lint code
        run: npm run lint

      - name: 🔍 TypeScript type check
        run: npm run type-check

      - name: 🧪 Run Jest tests with coverage
        run: npm run test:coverage

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: 🏗️ Build application
        run: npm run build

      - name: ✅ Verify build output
        run: |
          if [ ! -d ".next" ] && [ ! -d "dist" ] && [ ! -d "build" ]; then
            echo "❌ Build output directory not found"
            exit 1
          fi
          echo "✅ Build completed successfully"

      - name: ❌ Report ci-checks failure to GitHub App
        if: always() && failure()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: failure
          name: ✅ ci-checks
          title: '❌ CI Failed'
          summary: 'One or more CI checks failed. Review the logs for details.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: ✅ Report ci-checks success to GitHub App
        if: always() && success()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: success
          name: ✅ ci-checks
          title: '✅ CI Passed'
          summary: 'All linting, type checks, Jest tests, and build verification passed successfully.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: ⚠️ Report ci-checks cancelled to GitHub App
        if: always() && cancelled()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: cancelled
          name: ✅ ci-checks
          title: '⚠️ CI Cancelled'
          summary: 'The CI run was cancelled.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: ⏰ Report ci-checks timed_out to GitHub App
        if: always() && failure() && contains(github.event.client_payload.git.message || '', 'timeout')
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: timed_out
          name: ✅ ci-checks
          title: '⏰ CI Timed Out'
          summary: 'The CI run timed out before completion.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: 📝 Summary report for CI Checks
        if: always()
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ All CI checks completed." >> $GITHUB_STEP_SUMMARY
          echo "- **Linting**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Type Check**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Jest Tests**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
