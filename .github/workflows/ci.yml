name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [vercel.deployment.success]

jobs:
  ci-checks:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: ‚úÖ ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 5

    env:
      NODE_ENV: test
      BASE_URL: ${{ github.event.client_payload.url }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

    steps:
      - name: üïí Report CI pending status to GitHub PR
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'pending',
              context: '‚úÖ ci-checks',
              description: 'CI checks are in progress',
            })
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üîé Lint code
        run: npm run lint

      - name: üß™ Run Jest tests
        run: npm run test

      - name: ‚ùå Report CI failure to GitHub PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'failure',
              context: '‚úÖ ci-checks',
              description: 'Jest or Lint checks failed',
            })

      - name: ‚úÖ Report status to GitHub PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'success',
              context: '‚úÖ ci-checks',
              description: 'Jest and Lint checks passed',
            })

  playwright-tests:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: üß™ playwright-tests
    needs: ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64

    timeout-minutes: 35
    strategy:
      fail-fast: true
      matrix:
        project: [chromium, firefox, webkit]

    env:
      NODE_ENV: test
      BASE_URL: ${{ github.event.client_payload.url }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}

    steps:
      - name: üïí Report Playwright pending status to GitHub PR
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'pending',
              context: 'playwright-tests (${ { matrix.project } })',
              description: 'Playwright ${ { matrix.project } } tests are in progress',
            })

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

        with:
          ref: '${{ github.event.client_payload.git.sha }}'

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: |
          npm ci --legacy-peer-deps

      - name: üß™ Run Playwright tests (${ { matrix.project } })
        run: npx playwright test --project=${{ matrix.project }} --reporter=list
        env:
          CI: true
        shell: bash

      - name: ‚ùå Report Playwright failure to GitHub PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'failure',
              context: 'playwright-tests (${ { matrix.project } })',
              description: 'Playwright ${ { matrix.project } } tests failed',
            })

      - name: ‚úÖ Report status to GitHub PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.client_payload.git.sha }}',
              state: 'success',
              context: 'playwright-tests (${ { matrix.project } })',
              description: 'Playwright ${ { matrix.project } } tests passed',
            })

      - name: üì§ Upload Playwright artifacts (screenshots, traces, videos)
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-results-${{ matrix.project }}'
          path: test-results/
          retention-days: 7

      - name: üì§ Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-html-report-${{ matrix.project }}'
          path: playwright-report
          retention-days: 7
