name: CI

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  repository_dispatch:
    types: [vercel.deployment.success]

env:
  NODE_ENV: test
  BASE_URL: ${{ github.event.client_payload.url }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

jobs:
  ci-checks:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: ‚úÖ ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 10

    steps:
      - name: üß™ Log GitHub context
        run: echo '${{ toJson(github) }}'

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.git.sha }}

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üöÄ Report in_progress status
        uses: ./.github/actions/report-status
        with:
          check_name: ‚úÖ ci-checks
          status: in_progress
          title: 'üöß CI In Progress'
          summary: 'Running linting, type checks, Jest tests, and build verification...'
          sha: ${{ github.event.client_payload.git.sha }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üîé Lint code
        id: lint
        run: npm run lint

      - name: üîç TypeScript type check
        id: typecheck
        run: npm run type-check

      - name: üß™ Run Jest tests with coverage
        id: test
        run: npm run test:coverage

      - name: üìä Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: üèóÔ∏è Build application
        id: build
        run: npm run build

      - name: ‚úÖ Verify build output
        id: verify
        run: |
          if [ ! -d ".next" ] && [ ! -d "dist" ] && [ ! -d "build" ]; then
            echo "‚ùå Build output directory not found"
            exit 1
          fi
          echo "‚úÖ Build completed successfully"

      - name: üìù Generate step summary
        if: always()
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Step | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Linting | ${{ steps.lint.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Type Check | ${{ steps.typecheck.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Jest Tests | ${{ steps.test.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ steps.build.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Verification | ${{ steps.verify.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY

      - name: üì§ Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-build-artifacts
          path: |
            .next/
            dist/
            build/
            coverage/
          retention-days: 7

      # Unified status reporting for all outcomes
      - name: ‚úÖ Report success
        if: always() && success()
        uses: ./.github/actions/report-status
        with:
          check_name: ‚úÖ ci-checks
          status: completed
          conclusion: success
          title: '‚úÖ CI Passed'
          summary: 'All linting, type checks, Jest tests, and build verification passed successfully.'
          sha: ${{ github.event.client_payload.git.sha }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: ‚ùå Report failure
        if: always() && failure()
        uses: ./.github/actions/report-status
        with:
          check_name: ‚úÖ ci-checks
          status: completed
          conclusion: failure
          sha: ${{ github.event.client_payload.git.sha }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}

      - name: ‚ö†Ô∏è Report cancelled
        if: always() && cancelled()
        uses: ./.github/actions/report-status
        with:
          check_name: ‚úÖ ci-checks
          status: completed
          conclusion: cancelled
          sha: ${{ github.event.client_payload.git.sha }}
          host: ${{ secrets.APP_HOST }}
          app_secret: ${{ secrets.INTERNAL_APP_SECRET }}
