name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci-checks:
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 30

    env:
      NODE_ENV: test
      BASE_URL: http://localhost:3000
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      # Removed Playwright browsers cache and npm ci from ci-checks as not needed for lint/test
      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üîé Lint code
        run: npm run lint

      - name: üß™ Run Jest tests
        run: npm run test

  playwright-tests:
    needs: ci-checks
    runs-on: self-hosted
    timeout-minutes: 30
    strategy:
      matrix:
        project: [chromium, firefox, webkit]

    env:
      NODE_ENV: test
      BASE_URL: http://localhost:3000
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: üì¶ Install dependencies + Playwright browsers
        run: |
          npm ci --legacy-peer-deps
          npx playwright install --with-deps

      - name: Playwright tests (${{ matrix.project }})
        run: npx playwright test --project=${{ matrix.project }} --reporter=list
        env:
          CI: true

      - name: üì§ Upload Playwright artifacts (screenshots, traces, videos)
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-playwright-results-${{ matrix.project }}
          path: test-results/

      - name: üì§ Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-playwright-html-report-${{ matrix.project }}
          path: playwright-report
