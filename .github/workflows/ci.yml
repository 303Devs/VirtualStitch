name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [vercel.deployment.success]

jobs:
  ci-checks:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: ‚úÖ ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 5

    env:
      NODE_ENV: test
      BASE_URL: ${{ github.event.client_payload.url }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

    steps:
      - name: ‚úÖ Mark check as in progress
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'in_progress'
          title: '‚è≥ CI Running'
          summary: 'The CI checks are currently in progress.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üîé Lint code
        run: npm run lint

      - name: üß™ Run Jest tests
        run: npm run test

      - name: ‚úÖ Update check status to failed
        if: failure() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'completed'
          conclusion: 'failure'
          title: '‚ùå CI Failed'
          summary: 'Some checks failed. Review the logs for details.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}
      - name: ‚úÖ Update check status to success
        if: success() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'completed'
          conclusion: 'success'
          title: '‚úÖ CI Passed'
          summary: 'All tests and lint checks passed successfully.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to cancelled
        if: cancelled() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'completed'
          conclusion: 'cancelled'
          title: '‚ö†Ô∏è CI Cancelled'
          summary: 'The CI run was cancelled.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to skipped
        if: github.job == 'ci-checks' && github.run_attempt > 1 && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'completed'
          conclusion: 'skipped'
          title: '‚ö†Ô∏è CI Skipped'
          summary: 'The CI run was skipped due to a previous attempt.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to timed_out
        if: failure() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != '' && contains(github.event.client_payload.git.message || '', 'timeout')
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: '‚úÖ ci-checks'
          status: 'completed'
          conclusion: 'timed_out'
          title: '‚è∞ CI Timed Out'
          summary: 'The CI run timed out before completion.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

  playwright-tests:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: üß™ playwright-tests
    needs: ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64

    timeout-minutes: 35
    strategy:
      fail-fast: true
      matrix:
        project: [chromium, firefox, webkit]

    env:
      NODE_ENV: test
      BASE_URL: ${{ github.event.client_payload.url }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}

    steps:
      - name: ‚úÖ Mark check as in progress
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'in_progress'
          title: '‚è≥ Playwright Tests Running (${{ matrix.project }})'
          summary: 'The Playwright tests are currently in progress.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.git.sha }}
          fetch-depth: 0

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: |
          npm ci --legacy-peer-deps

      - name: üß™ Run Playwright tests (${{ matrix.project }})
        run: npx playwright test --project=${{ matrix.project }} --reporter=list,html
        env:
          CI: true

      - name: ‚úÖ Update check status to failed
        if: failure() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'completed'
          conclusion: 'failure'
          title: '‚ùå Playwright Tests Failed (${{ matrix.project }})'
          summary: 'Some Playwright tests failed. Review the logs for details.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to success
        if: success() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'completed'
          conclusion: 'success'
          title: '‚úÖ Playwright Tests Passed (${{ matrix.project }})'
          summary: 'All Playwright tests passed successfully.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to cancelled
        if: cancelled() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'completed'
          conclusion: 'cancelled'
          title: '‚ö†Ô∏è Playwright Tests Cancelled (${{ matrix.project }})'
          summary: 'The Playwright tests run was cancelled.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to skipped
        if: github.job == 'playwright-tests' && github.run_attempt > 1 && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != ''
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'completed'
          conclusion: 'skipped'
          title: '‚ö†Ô∏è Playwright Tests Skipped (${{ matrix.project }})'
          summary: 'The Playwright tests run was skipped due to a previous attempt.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: ‚úÖ Update check status to timed_out
        if: failure() && github.event_name == 'repository_dispatch' && github.event.client_payload.git.sha != '' && contains(github.event.client_payload.git.message || '', 'timeout')
        uses: ./.github/actions/update-check
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          name: 'playwright-tests (${{ matrix.project }})'
          status: 'completed'
          conclusion: 'timed_out'
          title: '‚è∞ Playwright Tests Timed Out (${{ matrix.project }})'
          summary: 'The Playwright tests run timed out before completion.'
          token: ${{ secrets.FGT_UPDATE_CHECK_TOKEN }}

      - name: üì§ Upload Playwright artifacts (screenshots, traces, videos)
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-results-${{ matrix.project }}'
          path: test-results/
          retention-days: 7

      - name: üì§ Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-html-report-${{ matrix.project }}'
          path: playwright-report
          retention-days: 7
