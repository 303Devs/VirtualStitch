name: CI

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [vercel.deployment.success]

env:
  NODE_ENV: test
  BASE_URL: ${{ github.event.client_payload.url }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

jobs:
  ci-checks:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: ‚úÖ ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    timeout-minutes: 5

    steps:
      - name: üß™ Log GitHub context
        run: echo '${{ toJson(github) }}'

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üöÄ Report ci-checks in_progress to GitHub App
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: in_progress
          name: ‚úÖ ci-checks
          title: 'üöß CI In Progress'
          summary: 'CI checks are running...'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üîé Lint code
        run: npm run lint

      - name: üß™ Run Jest tests
        run: npm run test

      - name: ‚ùå Report ci-checks failure to GitHub App
        if: always() && failure()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: failure
          name: ‚úÖ ci-checks
          title: '‚ùå CI Failed'
          summary: 'Some checks failed. Review the logs for details.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
      - name: ‚úÖ Report ci-checks success to GitHub App
        if: always() && success()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: success
          name: ‚úÖ ci-checks
          title: '‚úÖ CI Passed'
          summary: 'All tests and lint checks passed successfully.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
      - name: ‚ö†Ô∏è Report ci-checks cancelled to GitHub App
        if: always() && cancelled()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: cancelled
          name: ‚úÖ ci-checks
          title: '‚ö†Ô∏è CI Cancelled'
          summary: 'The CI run was cancelled.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
      - name: ‚ö†Ô∏è Report ci-checks skipped to GitHub App
        if: always() && github.run_attempt > 1
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: skipped
          name: ‚úÖ ci-checks
          title: '‚ö†Ô∏è CI Skipped'
          summary: 'The CI run was skipped due to a previous attempt.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
      - name: ‚è∞ Report ci-checks timed_out to GitHub App
        if: always() && failure() && contains(github.event.client_payload.git.message || '', 'timeout')
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: timed_out
          name: ‚úÖ ci-checks
          title: '‚è∞ CI Timed Out'
          summary: 'The CI run timed out before completion.'
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}
      - name: üìù Summary report for CI Checks
        if: always()
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Lint and tests completed." >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
  playwright-tests:
    if: github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'preview'
    name: üß™ playwright-tests
    needs: ci-checks
    runs-on:
      - self-hosted
      - Linux
      - ARM64

    timeout-minutes: 35
    strategy:
      fail-fast: true
      matrix:
        project: [chromium, firefox, webkit]

    steps:
      - name: üöÄ Report playwright in_progress to GitHub App
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: in_progress
          name: playwright-tests (${{ matrix.project }})
          title: üöß Playwright Tests In Progress (${{ matrix.project }})
          summary: Playwright tests are running...
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: üß™ Log GitHub context
        run: echo '${{ toJson(github) }}'

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.git.sha }}
          fetch-depth: 0

      - name: üîß Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üß™ Run Playwright tests (${{ matrix.project }})
        run: npx playwright test --project=${{ matrix.project }} --reporter=list,html
        env:
          CI: true

      - name: ‚ùå Report playwright failure to GitHub App
        if: always() && failure()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: failure
          name: playwright-tests (${{ matrix.project }})
          title: ‚ùå Playwright Tests Failed (${{ matrix.project }})
          summary: Some Playwright tests failed. Review the logs for details.
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: ‚úÖ Report playwright success to GitHub App
        if: always() && success()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: success
          name: playwright-tests (${{ matrix.project }})
          title: ‚úÖ Playwright Tests Passed (${{ matrix.project }})
          summary: All Playwright tests passed successfully.
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: ‚ö†Ô∏è Report playwright cancelled to GitHub App
        if: always() && cancelled()
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: cancelled
          name: playwright-tests (${{ matrix.project }})
          title: ‚ö†Ô∏è Playwright Tests Cancelled (${{ matrix.project }})
          summary: The Playwright tests run was cancelled.
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: ‚ö†Ô∏è Report playwright skipped to GitHub App
        if: always() && github.run_attempt > 1
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: skipped
          name: playwright-tests (${{ matrix.project }})
          title: ‚ö†Ô∏è Playwright Tests Skipped (${{ matrix.project }})
          summary: The Playwright tests run was skipped due to a previous attempt.
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: ‚è∞ Report playwright timed_out to GitHub App
        if: always() && failure() && contains(github.event.client_payload.git.message || '', 'timeout')
        uses: ./.github/actions/report-checks
        with:
          sha: ${{ github.event.client_payload.git.sha }}
          status: completed
          conclusion: timed_out
          name: playwright-tests (${{ matrix.project }})
          title: ‚è∞ Playwright Tests Timed Out (${{ matrix.project }})
          summary: The Playwright tests run timed out before completion.
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          host: ${{ secrets.APP_HOST }}

      - name: üì§ Upload Playwright artifacts (screenshots, traces, videos)
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-results-${{ matrix.project }}'
          path: test-results/
          retention-days: 7

      - name: üì§ Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-playwright-html-report-${{ matrix.project }}'
          path: playwright-report
          retention-days: 7

      - name: üìù Summary report for Playwright (${{ matrix.project }})
        if: always()
        run: |
          echo "## Playwright Test Summary: ${{ matrix.project }}" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Tests finished running." >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ matrix.project }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
